1조 
Coding boxer
발표자 - 김용진
2조
원더풀
발표자 - 김진영, 김찬호, 전병호
3조
1석3조
발표자 - 이동현
4조
Net,다섯
발표자 - 송화준
----------------------------------------------------------
────── 결과창 ──────
2조의 결과 -> 1등 
1조의 결과 -> 2등 
3조의 결과 -> 3등 
4조의 결과 -> 4등 
-----------------------------------------------------------
1. 요소의 CSS 속성 제어
 1-1. 속성값 읽기
  - HTML태그 요소에 적용된 특정 속성값을 얻기 위해서는 CSS() 함수를
  사용한다. 

	$("요소").css("속성이름", "값");

 1-2. 속성값 변경/추가 하기
  - HTML태그 요소에 특정 CSS값을 지정할 경우, attr()함수와
  용법이 동일하다
 	
	let 변수 = $("요소").css("css속성이름");
	
	$("요소").css({
		"속성":"값",
		"속성":"값",
		"속성":"값"
	});

 1-3. CSS클래스의 적용 여부 알기
  - HTML태그 요소의 특정 클래스 적용 여부는 hasClass()메서드의
  리턴값(boolean)으로 파악할 수 있다. 
  
	let 변수 = $("요소").hasClass("클래스이름");

 1-4. 클래스의 적용과 해제
  - 요소에 특정 CSS클래스를 적용 할 경우, addClass()함수를 사용
  - 두개 이상의 클래스를 한번에 적용할 경우 공백으로 구분하여 지정

	$("요소").addClass("클래스이름");

  - HTML태그 요소에 적용된 특정 CSS클래스를 제거 할 경우
  removeCalss()함수를 사용한다. 
  - 두개 이상의 클래스를 한번에 적용할 경우 공백으로 구분하여 지정

	$("요소").removeClass("클래스이름");

 1-5. 적용과 해제의 반복처리
  - 어떤 요소에 특정 클래스의 적용과 해제를 반복적으로 처리하는
  것을 토글처리라고한다.
  - 토글처리를 위해서는, 해당 클래스가 적용되어 있는지를 검사하여
  적용되어 있다면 addClass(), 적용되어 있지 않다면 removeClass()
 함수를 호출해야 한다. 

	if( $("요소").hasClass("클래스이름") ){
		$("요소").removeClass("클래스이름");
	} else {
		$("요소").addClass("클래스이름");
	}

	-> 구문축약

	$("요소").toggleClass("클래스이름");



2. not()함수
 2-1. this용법
  - 여러개의 요소를 의미하는 CSS셀렉터를 사용하여 이벤트를 정의 한 경우,
  대상 요소들은 모두 동일한 이벤트를 발생시킬 수 있다.
  - 이 때 $(this)는 현재 이벤트가 발생한 단 하나의 요소를 가리킨다.

 2-2. this를 부정하는 not(this)
 - $("요소") 객체의 not(this)함수는 여러 HTML요소들 중
  이벤트가 발생한 자신을 제외한 나머지 객체들을 가리킨다.

 2-3. not()함수의 기능은 "~중에서 ~은 제외"라는 의미
  - this키워드에 대해서 뿐만 아니라 다른 jQuery객체나 다른 객체를
  지정하기 위한 selector에 대해서도 적용할 수 있다.
  - $(".btn").not($("#mybtn")).css(...);
 - $(".btn").not(".btn:eq(2)").css(...);

3. 탐색(traversing)
 3-1. 특정 요소를 기준으로 하여 주변을 탐색하기
  - next() 	: 현재 요소를 기준으로 다음 요소를 리턴한다
  - prev()	: 현재 요소를 기준으로 이전 요소를 리턴한다
 - parent()	: 현재 요소의 상위 요소를 리턴한다
 - children()	: 현재 요소의 하위 요소들을 배열로 리턴한다
 - eq()		: 현재 ㅇ소의 하위 요소중에서 n번째 요소를 선택한다
		  n값은 0부터 시작한다. 

  - find() 	: HTML 요소가 인접해 있지 않더라도 하위 태그중에서 가장 가까운
		  요소를 검색한다. 

4. 엘리먼트 제어
 4-1. 자식으로 삽입
  - append(), appendTo(), html(), prepend(), prependTo(),
  text()
 - https://api.jquery.com/category/manipulation/dom-insertion-inside

 4-2. 형제로 삽입
  - after(), before(), insertAfter(), insertBefore()

 4-3. 부모로 감싸기
  - unwrap(), wrap(), wrapAll(), wrapInner()

 4-4. 삭제
  - detach(), empty(), remove(), unwrap()

 4-5. 치환
  - replaceAll(), replaceWith()

 4-6. 클래스
  - addClass(), hasClass(), removeClass(), toggleClass()

 4-7. 속성제어 
  - val()


















